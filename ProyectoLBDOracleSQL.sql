--    DROP TABLE SERVICIOS;
CREATE TABLE SERVICIOS(
idServicio NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
nombreServicio VARCHAR2(20) not null,
primary key(idServicio));

--oracle pide multiple filas de insert individualmente pero de la siguiente manera tambien permite añadir multiples valores a una columna
INSERT INTO SERVICIOS (nombreServicio) 
SELECT 'LAVADO' FROM DUAL 
UNION 
SELECT 'TIENDA' FROM DUAL;
--
SELECT * FROM SERVICIOS;


/*----------------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------------*/
--   DROP TABLE TIENDA;
CREATE TABLE TIENDA(
idProducto NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
nombreProducto VARCHAR2(25) not null, 
precio NUMBER not null,
idServicio NUMBER,
primary key(idProducto),
foreign key(idServicio) references SERVICIOS(idServicio));

--INSERT ALL  
--  INTO TIENDA (idCategoria, idServicio) VALUES ('GENERAL',2) 
--SELECT * FROM dual;  

INSERT INTO TIENDA(nombreProducto,precio,idServicio)
VALUES('ESCOBILLA',20,2);
INSERT INTO TIENDA(nombreProducto,precio,idServicio)
VALUES('CERA',25,2);

SELECT * FROM TIENDA;
/*----------------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------------*/
--tabla factura para insertar productos de la tienda, cantidad y facturar un ID
--  DROP TABLE FACTURA_TIENDA;
CREATE TABLE FACTURA_TIENDA(
codFacTie NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
cantidad NUMBER,
idProducto NUMBER,
primary key(codFacTie),
foreign key(idProducto) references TIENDA(idProducto));
/*----------------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------------*/
--   DROP TABLE LAVADO;
CREATE TABLE LAVADO(
idLavado NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
nombreLavado VARCHAR2(25) not null,
precio NUMBER not null,
idServicio NUMBER,
primary key(idLavado),
foreign key(idServicio) references SERVICIOS(idServicio));

--INSERT ALL
--INTO LAVADO(nombreLavado, idServicio) VALUES('LAVADO SENCILLO',2)
--INTO LAVADO(nombreLavado, idServicio) VALUES('LAVADO SENCILLO/ENCERADO',2)
--SELECT * FROM DUAL;

INSERT INTO LAVADO(nombreLavado,precio,idServicio) 
SELECT 'LAVADO SENCILLO',25,1 FROM DUAL 
UNION 
SELECT 'LAVADO SENCILLO/ENCERADO',30,1 FROM DUAL;

SELECT * FROM LAVADO;
/*----------------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------------*/
--tabla factura para insertar productos del servicio de lavado, cantidad y facturar un ID
--   DROP TABLE FACTURA_LAVADO;
CREATE TABLE FACTURA_LAVADO(
codFacLav NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
cantidad NUMBER,
idLavado NUMBER,
primary key(codFacLav),
foreign key(idLavado) references LAVADO(idLavado));
/*----------------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------------*/
--   DROP TABLE FACTURA_FINAL;
CREATE TABLE FACTURA_FINAL(
idFactura NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
codFacLav NUMBER,
codFacTie NUMBER,
primary key(idFactura),
foreign key(codFacLav) references FACTURA_LAVADO(codFacLav),
foreign key(codFacTie) references FACTURA_TIENDA(codFacTie));
/*----------------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------------*/
--   DROP TABLE CARROS;
CREATE TABLE CARROS(
idCarro NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
placa NUMBER,
primary key(idCarro));
/*----------------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------------*/
--  DROP TABLE CLIENTES;
CREATE TABLE CLIENTES(
idCliente NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
nombreCliente VARCHAR2(50) not null,
cedula VARCHAR2(20) not null,
telefono VARCHAR2(15) not null,
idCarro NUMBER,
primary key(idCliente),
foreign key(idCarro) references CARROS(idCarro));
/*----------------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------------*/
--   DROP TABLE PAGO;
CREATE TABLE PAGO(
idPago NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
fecha DATE,
idFactura NUMBER,
idCliente NUMBER,
primary key(idPago),
foreign key(idCliente) references CLIENTES(idCliente),
foreign key(idFactura) references FACTURA_FINAL(idFactura));

/*----------------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------------*/
/*STORED PROCEDURES*/
/*----------------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------------*/
CREATE OR REPLACE PROCEDURE SELECCIONAR_SERVICIOS(filas OUT SYS_REFCURSOR)
AS
BEGIN
--OPEN ... FOR ... va a guardar lo seleccionado en la variable 'filas' para luego utilizarlo
OPEN filas FOR SELECT * FROM SERVICIOS;
END;


CREATE OR REPLACE PROCEDURE SELECCIONAR_LAVADOS(filas2 OUT SYS_REFCURSOR)
AS
BEGIN
--OPEN ... FOR ... va a guardar lo seleccionado en la variable 'filas' para luego utilizarlo
OPEN filas2 FOR SELECT * FROM LAVADO;
END;


CREATE OR REPLACE PROCEDURE SELECCIONAR_TIENDA(filas3 OUT SYS_REFCURSOR)
AS
BEGIN
--OPEN ... FOR ... va a guardar lo seleccionado en la variable 'filas' para luego utilizarlo
OPEN filas3 FOR SELECT * FROM TIENDA;
END;















